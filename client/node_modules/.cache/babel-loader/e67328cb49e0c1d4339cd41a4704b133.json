{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Valentin\\\\Desktop\\\\React\\\\eCoal\\\\e.COAL\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Valentin\\\\Desktop\\\\React\\\\eCoal\\\\e.COAL\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Valentin\\\\Desktop\\\\React\\\\eCoal\\\\e.COAL\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Valentin\\\\Desktop\\\\React\\\\eCoal\\\\e.COAL\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Valentin\\\\Desktop\\\\React\\\\eCoal\\\\e.COAL\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Valentin\\\\Desktop\\\\React\\\\eCoal\\\\e.COAL\\\\client\\\\src\\\\components\\\\playing.js\";\nimport React, { Component } from 'react';\nimport { quizzes, users } from '../examples';\n\nvar Question =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Question, _Component);\n\n  function Question() {\n    _classCallCheck(this, Question);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Question).apply(this, arguments));\n  }\n\n  _createClass(Question, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var tt = this.props.question.txtAnswers.map(function (txt, index) {\n        return React.createElement(\"label\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }, txt, React.createElement(\"input\", {\n          type: \"checkbox\",\n          id: \"reponse\" + index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }));\n      });\n      var ti = this.props.question.imgAnswers.map(function (img, index) {\n        return React.createElement(\"label\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          key: index,\n          src: img,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"checkbox\",\n          id: \"reponse\" + index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.props.question.question), React.createElement(\"form\", {\n        onSubmit: function onSubmit(e) {\n          return _this.props.nextQuestion(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, tt, ti, React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Validate\")));\n    }\n  }]);\n\n  return Question;\n}(Component);\n\nvar Finish =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Finish, _Component2);\n\n  function Finish() {\n    _classCallCheck(this, Finish);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Finish).apply(this, arguments));\n  }\n\n  _createClass(Finish, [{\n    key: \"render\",\n    value: function render() {\n      var finalscore = this.props.score;\n      return React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Well played !\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Your score is: \", finalscore), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"You can retry the quiz if you would like to do a better score. \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), \"You can also choose another quiz to play. Finally we invited you to create your own Quiz !\"), React.createElement(\"button\", {\n        className: \"btn orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Try again\"), React.createElement(\"button\", {\n        className: \"btn orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Choose another quiz\"), React.createElement(\"button\", {\n        className: \"btn orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Create a Quiz\"));\n    }\n  }]);\n\n  return Finish;\n}(Component);\n\nvar Play =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(Play, _Component3);\n\n  function Play(props) {\n    var _this2;\n\n    _classCallCheck(this, Play);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Play).call(this, props)); // this.quizz = quizzes.filter(q=> q._uid == this.props.match.params.id)[0];\n\n    _this2.state = {\n      current: 0,\n      playing: true,\n      score: 0,\n      quizz: thisprops.match.testValue\n    };\n    return _this2;\n  }\n\n  _createClass(Play, [{\n    key: \"nextQuestion\",\n    value: function nextQuestion(e) {\n      e.preventDefault();\n      var rep = [];\n      var max = this.quizz.questions.length - 1;\n\n      if (this.state.current < max) {\n        //      \n        for (var i = 0; i <= e.target.elements.length - 1; i++) {\n          if (e.target.elements[i].checked) {\n            rep.push(i);\n          }\n        } //Indique si l'on a répondu vrai ou faux\n\n\n        var win = rep.join() == this.quizz.questions[this.state.current].solutions.join(); //Si on a bon alors...\n\n        if (win == true) {\n          //Rajouter des points au score\n          this.setState({\n            score: parseInt(this.state.score + this.quizz.questions[this.state.current].points)\n          });\n        } //On calcule l'index suivant et on l'update\n\n\n        var index = this.state.current + 1;\n        this.setState({\n          current: index\n        });\n      } else {\n        //Alors on n'autorise pas à jouer\n        this.setState({\n          playing: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Playing\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, this.quizz.name), this.state.playing ? React.createElement(Question, {\n        question: this.quizz.questions[this.state.current],\n        nextQuestion: function nextQuestion(e) {\n          return _this3.nextQuestion(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }) : React.createElement(Finish, {\n        score: this.state.score,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Play;\n}(Component);\n\nexport { Play };","map":{"version":3,"sources":["C:\\Users\\Valentin\\Desktop\\React\\eCoal\\e.COAL\\client\\src\\components\\playing.js"],"names":["React","Component","quizzes","users","Question","tt","props","question","txtAnswers","map","txt","index","ti","imgAnswers","img","e","nextQuestion","Finish","finalscore","score","Play","state","current","playing","quizz","thisprops","match","testValue","preventDefault","rep","max","questions","length","i","target","elements","checked","push","win","join","solutions","setState","parseInt","points","name"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {quizzes, users} from '../examples';\r\n\r\n\r\nclass Question extends Component {\r\n\r\n  render() {\r\n    const tt = this.props.question.txtAnswers.map((txt, index) =>\r\n\r\n      <label key={index}>\r\n        {txt}\r\n        <input type='checkbox' id={\"reponse\"+index} />\r\n      </label>\r\n    );\r\n\r\n    const ti = this.props.question.imgAnswers.map((img, index) =>\r\n    <label key={index}>\r\n        <img key={index} src={img} />\r\n        <input type='checkbox' id={\"reponse\"+index} />\r\n        </label>\r\n  \r\n      )\r\n\r\n    return (\r\n      \r\n      <div>\r\n        <h3>{this.props.question.question}</h3>\r\n        <form onSubmit={e => this.props.nextQuestion(e)}>\r\n          {tt}\r\n          {ti}\r\n          <button type='submit' >Validate</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Finish extends Component {\r\n\r\n  render() {\r\n    const finalscore = this.props.score;\r\n\r\n    return (\r\n      <>\r\n      <h3>Well played !</h3>\r\n      <p>Your score is: {finalscore}</p>\r\n      <p>\r\n        You can retry the quiz if you would like to do a better score. <br /><br />\r\n        You can also choose another quiz to play.\r\n        Finally we invited you to create your own Quiz !\r\n      </p>\r\n      <button className=\"btn orange\">Try again</button>\r\n      <button className=\"btn orange\">Choose another quiz</button>\r\n      <button className=\"btn orange\">Create a Quiz</button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass Play extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    // this.quizz = quizzes.filter(q=> q._uid == this.props.match.params.id)[0];\r\n    this.state = {\r\n      current: 0,\r\n      playing: true,\r\n      score: 0,\r\n      quizz: thisprops.match.testValue\r\n    };\r\n  }\r\n\r\n  nextQuestion(e) {\r\n\r\n    e.preventDefault();\r\n    const rep = [];\r\n    const max = this.quizz.questions.length-1;\r\n\r\n    if( this.state.current < max){\r\n\r\n\r\n      //      \r\n      for (let i = 0; i <= e.target.elements.length - 1; i++) {\r\n        if (e.target.elements[i].checked) {\r\n          rep.push(i);\r\n        }\r\n      }\r\n    \r\n      //Indique si l'on a répondu vrai ou faux\r\n      const win = ( rep.join() == this.quizz.questions[this.state.current].solutions.join() )\r\n      \r\n      //Si on a bon alors...\r\n      if (win == true) {\r\n        //Rajouter des points au score\r\n        this.setState({\r\n          score: parseInt(this.state.score + this.quizz.questions[this.state.current].points)\r\n        });\r\n      }\r\n\r\n      //On calcule l'index suivant et on l'update\r\n      const index = this.state.current+1;\r\n      this.setState({\r\n        current: index\r\n      });\r\n\r\n\r\n\r\n    }\r\n    else{\r\n      //Alors on n'autorise pas à jouer\r\n      this.setState({\r\n        playing: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Playing</h1>\r\n        <h2>{this.quizz.name}</h2>\r\n          {\r\n            this.state.playing\r\n            ? <Question question = {this.quizz.questions[this.state.current]} nextQuestion = {(e) => this.nextQuestion(e)} />\r\n            : <Finish score= {this.state.score} />\r\n          }\r\n        {/* <Question question = {this.quizz.questions[this.state.current]} nextQuestion = {(e) => this.nextQuestion(e)} /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport {Play};\r\n"]},"metadata":{},"sourceType":"module"}